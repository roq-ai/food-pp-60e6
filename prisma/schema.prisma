generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model food_item {
  id            String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String      @db.VarChar(255)
  description   String?     @db.VarChar(255)
  price         Int
  restaurant_id String?     @db.Uuid
  created_at    DateTime    @default(now()) @db.Timestamp(6)
  updated_at    DateTime    @default(now()) @db.Timestamp(6)
  restaurant    restaurant? @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order         order[]
}

model order {
  id                               String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id                      String?    @db.Uuid
  food_item_id                     String?    @db.Uuid
  delivery_guy_id                  String?    @db.Uuid
  status                           String     @db.VarChar(255)
  created_at                       DateTime   @default(now()) @db.Timestamp(6)
  updated_at                       DateTime   @default(now()) @db.Timestamp(6)
  user_order_customer_idTouser     user?      @relation("order_customer_idTouser", fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_order_delivery_guy_idTouser user?      @relation("order_delivery_guy_idTouser", fields: [delivery_guy_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  food_item                        food_item? @relation(fields: [food_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model restaurant {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?     @db.VarChar(255)
  image       String?     @db.VarChar(255)
  name        String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  user_id     String      @db.Uuid
  tenant_id   String      @db.VarChar(255)
  food_item   food_item[]
  user        user        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                                String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                             String       @unique @db.VarChar(255)
  firstName                         String?      @db.VarChar(255)
  lastName                          String?      @db.VarChar(255)
  roq_user_id                       String       @db.VarChar(255)
  tenant_id                         String       @db.VarChar(255)
  created_at                        DateTime     @default(now()) @db.Timestamp(6)
  updated_at                        DateTime     @default(now()) @db.Timestamp(6)
  order_order_customer_idTouser     order[]      @relation("order_customer_idTouser")
  order_order_delivery_guy_idTouser order[]      @relation("order_delivery_guy_idTouser")
  restaurant                        restaurant[]
}
